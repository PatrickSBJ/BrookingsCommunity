// <auto-generated />
using System;
using BrookingsCommunity.Repos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrookingsCommunity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BrookingsCommunity.Models.ImportantLocation", b =>
                {
                    b.Property<int>("ImportantLocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkToInfo");

                    b.Property<string>("Name");

                    b.Property<string>("Significance");

                    b.HasKey("ImportantLocationID");

                    b.ToTable("ImportantLocations");
                });

            modelBuilder.Entity("BrookingsCommunity.Models.ImportantPerson", b =>
                {
                    b.Property<int>("ImportantPersonID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achievements");

                    b.Property<string>("LinkToInfo");

                    b.Property<string>("Name");

                    b.HasKey("ImportantPersonID");

                    b.ToTable("ImportantPeople");
                });

            modelBuilder.Entity("BrookingsCommunity.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("MessagePriority");

                    b.Property<string>("MessageReceiver");

                    b.Property<string>("MessageSender");

                    b.Property<string>("MessageText");

                    b.Property<int?>("UserID");

                    b.HasKey("MessageID");

                    b.HasIndex("UserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BrookingsCommunity.Models.Reply", b =>
                {
                    b.Property<int>("ReplyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MessageID");

                    b.Property<string>("ReplySender");

                    b.Property<string>("ReplyText");

                    b.HasKey("ReplyID");

                    b.HasIndex("MessageID");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("BrookingsCommunity.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BrookingsCommunity.Models.Message", b =>
                {
                    b.HasOne("BrookingsCommunity.Models.User")
                        .WithMany("Messages")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("BrookingsCommunity.Models.Reply", b =>
                {
                    b.HasOne("BrookingsCommunity.Models.Message")
                        .WithMany("Replies")
                        .HasForeignKey("MessageID");
                });
#pragma warning restore 612, 618
        }
    }
}
